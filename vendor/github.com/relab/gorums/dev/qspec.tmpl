{{/* Remember to run 'make dev' after editing this file. */}}

{{define "QFcomment"}}
// {{.MethodName}}QF is the quorum function for the {{.MethodName}}
{{- if .QuorumCall}}
// quorum call method.
{{- end -}}
{{- if .Future}}
// asynchronous quorum call method.
{{- end -}}
{{- if .Correctable}}
// correctable quorum call method.
{{- end -}}
{{- if .CorrectableStream}}
// correctable stream quourm call method.
{{- end -}}
{{end}}

{{define "QFreply"}}
{{- if or (.QuorumCall) (.Future) -}}
(*{{.FQCustomRespName}}, bool)
{{end -}}
{{- if or (.Correctable) (.CorrectableStream) -}}
(*{{.FQCustomRespName}}, int, bool)
{{end -}}
{{end}}

{{define "QFmethodSignature"}}
{{- if .QFWithReq}}
{{.MethodName}}QF(req *{{.FQReqName}}, replies []*{{.FQRespName}})
{{- else}}
{{.MethodName}}QF(replies []*{{.FQRespName}})
{{- end -}}
{{end}}

{{- if not .IgnoreImports}}
package {{.PackageName}}
{{- end}}

// QuorumSpec is the interface that wraps every quorum function.
type QuorumSpec interface {
{{- range .Services}}
{{- if not .Multicast -}}
{{template "QFcomment" . -}}
{{template "QFmethodSignature" .}} {{template "QFreply" .}}
{{end}}
{{end}}
}
